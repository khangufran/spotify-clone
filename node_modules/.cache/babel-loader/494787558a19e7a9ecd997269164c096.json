{"ast":null,"code":"var _jsxFileName = \"/home/liveuser/spotify-clone/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Login from './Login';\nimport React, { useEffect, useState } from 'react';\nimport { getToken } from './spotify';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Player from './Player';\nimport { useDataLayerValue } from './DataLayer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  _s();\n\n  const [{\n    user,\n    token,\n    playlists\n  }, dispatch] = useDataLayerValue();\n  useEffect(() => {\n    const hash = getToken();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      dispatch({\n        type: 'SET_TOKEN',\n        token: _token\n      });\n      spotify.setAccessToken(_token);\n      spotify.getMe().then(user => {\n        dispatch({\n          type: 'SET_USER',\n          user: user\n        });\n      });\n      spotify.getUserPlaylists().then(playlists => {\n        dispatch({\n          type: 'SET_PLAYLIST',\n          playlists: playlists\n        });\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: token ? /*#__PURE__*/_jsxDEV(Player, {\n      spotify: spotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 6\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"tGCZdTpbtNt4mXghaN1m3uE/7ww=\", false, function () {\n  return [useDataLayerValue];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/liveuser/spotify-clone/src/App.js"],"names":["Login","React","useEffect","useState","getToken","SpotifyWebApi","Player","useDataLayerValue","spotify","App","user","token","playlists","dispatch","hash","window","location","_token","access_token","type","setAccessToken","getMe","then","getUserPlaylists"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,QAAR,QAAuB,WAAvB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,iBAAR,QAAgC,aAAhC;;AAEA,MAAMC,OAAO,GAAG,IAAIH,aAAJ,EAAhB;;AAEA,SAASI,GAAT,GAAe;AAAA;;AACd,QAAM,CAAC;AAACC,IAAAA,IAAD;AAAMC,IAAAA,KAAN;AAAYC,IAAAA;AAAZ,GAAD,EAAwBC,QAAxB,IAAoCN,iBAAiB,EAA3D;AACAL,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMY,IAAI,GAAGV,QAAQ,EAArB;AACAW,IAAAA,MAAM,CAACC,QAAP,CAAgBF,IAAhB,GAAuB,EAAvB;AACA,UAAMG,MAAM,GAAGH,IAAI,CAACI,YAApB;;AAEA,QAAGD,MAAH,EAAW;AACVJ,MAAAA,QAAQ,CAAC;AACRM,QAAAA,IAAI,EAAC,WADG;AAERR,QAAAA,KAAK,EAACM;AAFE,OAAD,CAAR;AAIAT,MAAAA,OAAO,CAACY,cAAR,CAAuBH,MAAvB;AACAT,MAAAA,OAAO,CAACa,KAAR,GAAgBC,IAAhB,CAAsBZ,IAAD,IAAU;AAC9BG,QAAAA,QAAQ,CAAC;AACRM,UAAAA,IAAI,EAAC,UADG;AAERT,UAAAA,IAAI,EAACA;AAFG,SAAD,CAAR;AAIA,OALD;AAOAF,MAAAA,OAAO,CAACe,gBAAR,GAA2BD,IAA3B,CAAiCV,SAAD,IAAe;AAC9CC,QAAAA,QAAQ,CAAC;AACRM,UAAAA,IAAI,EAAC,cADG;AAERP,UAAAA,SAAS,EAACA;AAFF,SAAD,CAAR;AAIA,OALD;AAMA;AAED,GA1BQ,EA0BP,EA1BO,CAAT;AA2BC,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cAEAD,KAAK,gBACJ,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEH;AAAjB;AAAA;AAAA;AAAA;AAAA,YADI,gBAGJ,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AALD;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAxCQC,G;UACkCF,iB;;;KADlCE,G;AA0CT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport Login from './Login';\nimport React, {useEffect, useState} from 'react';\nimport {getToken} from './spotify';\nimport SpotifyWebApi from 'spotify-web-api-js'\nimport Player from './Player'\nimport {useDataLayerValue} from './DataLayer'\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n\tconst [{user,token,playlists},dispatch] = useDataLayerValue();\n\tuseEffect(() => {\n\t\tconst hash = getToken();\n\t\twindow.location.hash = \"\";\n\t\tconst _token = hash.access_token;\n\t\t\n\t\tif(_token) {\n\t\t\tdispatch({\n\t\t\t\ttype:'SET_TOKEN',\n\t\t\t\ttoken:_token,\n\t\t\t})\n\t\t\tspotify.setAccessToken(_token);\n\t\t\tspotify.getMe().then((user) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype:'SET_USER',\n\t\t\t\t\tuser:user,\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tspotify.getUserPlaylists().then((playlists) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype:'SET_PLAYLIST',\n\t\t\t\t\tplaylists:playlists,\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\t\n\t},[]);\n  return (\n    <div className=\"app\">\n\t\t\t{\n\t\t\t\ttoken?(\n\t\t\t\t\t<Player spotify={spotify}/>\n\t\t\t\t):(\n\t\t\t\t\t<Login/>\n\t\t\t\t)\n\t\t\t}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}